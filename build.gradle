group 'io.github.dector.glow'
version '0.2.3-SNAPSHOT'

buildscript {

    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath GradlePlugins.kotlin

        classpath GradlePlugins.build_config

        classpath GradlePlugins.shadow_jar
        classpath GradlePlugins.versions_plugin
    }
}

apply plugin: 'kotlin'
apply plugin: 'de.fuerstenau.buildconfig'
apply plugin: 'idea' // Required for build config IDE support
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.github.ben-manes.versions'

repositories {
    jcenter()
    maven { url "https://dl.bintray.com/arrow-kt/arrow-kt/" }
    maven { url "http://oss.sonatype.org/content/groups/public/" }
}

dependencies {
    compile Deps.kotlin_stdlib_jdk8
    compile Deps.kotlin_reflection  // can be removed later

    compile Deps.kotlinx_html

    compile Deps.slf4j_simple

    compile Deps.arrow_core_data
    compile Deps.arrow_core_extensions

    compile Deps.koin

    compile Deps.clikt
    compile Deps.jcommander
    compile Deps.json

    compile Deps.javalin

    compile Deps.flexmark
    compile Deps.jmustache
    compile Deps.eo_yaml

    testCompile Deps.kotlin_test
}

mainClassName = 'io.github.dector.glow.GlowKt'

shadowJar {
    classifier = null
}

task distrib(dependsOn: 'shadowJar') {
    doLast {
        def distribFile = file("./distrib/${jar.archiveName}")

        copy {
            from jar.archivePath
            into distribFile.parentFile
        }

        def relativePath = file('.').toURI().relativize(distribFile.toURI())
        println "Distribution saved to ./$relativePath"
    }
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = [
                "-XXLanguage:+InlineClasses",
                "-XXLanguage:+NewInference",
                "-Xallow-result-return-type"
        ]
    }
}

allprojects {
    group 'io.github.dector.glow'

    repositories {
        jcenter()
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    test {
        useJUnitPlatform()
    }
}
