group 'io.github.dector.glow'
version '0.2.1'

buildscript {
    apply from: 'dependencies.gradle'

    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath gradlePlugins.kotlin

        classpath gradlePlugins.buildConfig

        classpath gradlePlugins.shadowJar
        classpath gradlePlugins.versionsPlugin
    }
}

apply from: 'dependencies.gradle'

apply plugin: 'kotlin'
apply plugin: 'de.fuerstenau.buildconfig'
apply plugin: 'idea' // Required for build config IDE support
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.github.ben-manes.versions'

repositories {
    jcenter()
    maven { url "https://dl.bintray.com/kodein-framework/Kodein-DI/" }
}

dependencies {
    compile libraries.kotlinStdLibJdk8
    compile libraries.kotlinReflection  // can be removed later

    compile libraries.kotlinxHtml

    compile libraries.slf4jSimple

    compile libraries.kodein

    compile libraries.clikt
    compile libraries.jcommander
    compile libraries.json

    compile libraries.flexmark
    compile libraries.jmustache

    testCompile libraries.truth
    testCompile libraries.jupiter_api
    testCompile libraries.jupiter_engine
}

mainClassName = 'io.github.dector.glow.GlowKt'

shadowJar {
    classifier = null
}

test {
    useJUnitPlatform()
}

task distrib(dependsOn: 'shadowJar') {
    doLast {
        def distribFile = file("./distrib/${jar.archiveName}")

        copy {
            from jar.archivePath
            into distribFile.parentFile
        }

        def relativePath = file('.').toURI().relativize(distribFile.toURI())
        println "Distribution saved to ./$relativePath"
    }
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-XXLanguage:+InlineClasses", "-XXLanguage:+NewInference", "-Xallow-result-return-type"]
    }
}
